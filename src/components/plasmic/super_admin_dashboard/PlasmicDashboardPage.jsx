// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 5Wyypaj28HpFwgqusnxkCW
// Component: coHBJsslNByC
import * as React from "react";
import {
  Stack as Stack__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  useCurrentUser
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv
} from "@plasmicapp/react-web/lib/host";
import PageLayout from "../../PageLayout"; // plasmic-import: aG693ljhigII/component
import Satistic from "../../Satistic"; // plasmic-import: l9aj5pWQjv7Z/component
import "@plasmicapp/react-web/lib/plasmic.css";
import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import plasmic_plasmic_rich_components_css from "../plasmic_rich_components/plasmic.module.css"; // plasmic-import: jkU633o1Cz7HrJdwdxhVHk/projectcss
import projectcss from "./plasmic.module.css"; // plasmic-import: 5Wyypaj28HpFwgqusnxkCW/projectcss
import sty from "./PlasmicDashboardPage.module.css"; // plasmic-import: coHBJsslNByC/css

createPlasmicElementProxy;

export const PlasmicDashboardPage__VariantProps = new Array();

export const PlasmicDashboardPage__ArgProps = new Array();

const $$ = {};

function PlasmicDashboardPage__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );
  const $props = {
    ...args,
    ...variants
  };
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;
  const currentUser = useCurrentUser?.() || {};
  return (
    <React.Fragment>
      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"dashboard"}
          data-plasmic-override={overrides.dashboard}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            plasmic_antd_5_hostless_css.plasmic_tokens,
            plasmic_plasmic_rich_components_css.plasmic_tokens,
            sty.dashboard
          )}
        >
          <PageLayout
            data-plasmic-name={"pageLayout"}
            data-plasmic-override={overrides.pageLayout}
            className={classNames("__wab_instance", sty.pageLayout)}
          >
            <DataCtxReader__>
              {$ctx => (
                <React.Fragment>
                  <section
                    className={classNames(projectcss.all, sty.section___2Jouh)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        sty.freeBox___2QmBm
                      )}
                    >
                      <h1
                        data-plasmic-name={"h1"}
                        data-plasmic-override={overrides.h1}
                        className={classNames(
                          projectcss.all,
                          projectcss.h1,
                          projectcss.__wab_text,
                          sty.h1
                        )}
                      >
                        {"Dashboard"}
                      </h1>
                    </div>
                  </section>
                  <section
                    className={classNames(projectcss.all, sty.section__tmTev)}
                  >
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(
                        projectcss.all,
                        sty.freeBox___1TmhH
                      )}
                    >
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"columns"}
                        data-plasmic-override={overrides.columns}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.columns)}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.column__mCf8X
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__seV4I
                            )}
                          >
                            <Satistic
                              className={classNames(
                                "__wab_instance",
                                sty.satistic___35K0J
                              )}
                              unit={
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    sty.freeBox__hy9Ba
                                  )}
                                >
                                  <p
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.p,
                                      projectcss.__wab_text,
                                      sty.p___0Bbc9
                                    )}
                                  >
                                    {"Device Types"}
                                  </p>
                                </div>
                              }
                            />
                          </div>
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.column__s52Bz
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__noCyc
                            )}
                          >
                            <Satistic
                              className={classNames(
                                "__wab_instance",
                                sty.satistic__oDcG
                              )}
                              unit={
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    sty.freeBox__lyY0J
                                  )}
                                >
                                  <p
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.p,
                                      projectcss.__wab_text,
                                      sty.p___6Ha3U
                                    )}
                                  >
                                    {"Device Categories"}
                                  </p>
                                </div>
                              }
                            />
                          </div>
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.column___5Hrcn
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__yg4Vz
                            )}
                          >
                            <Satistic
                              className={classNames(
                                "__wab_instance",
                                sty.satistic__m1Jmn
                              )}
                              unit={
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    sty.freeBox___3GjdV
                                  )}
                                >
                                  <p
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.p,
                                      projectcss.__wab_text,
                                      sty.p__h8CJh
                                    )}
                                  >
                                    {"Devices"}
                                  </p>
                                </div>
                              }
                            />
                          </div>
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.column__l5QfK
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__xYgjs
                            )}
                          >
                            <Satistic
                              className={classNames(
                                "__wab_instance",
                                sty.satistic__vzZG
                              )}
                              unit={
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    sty.freeBox__wkBcv
                                  )}
                                >
                                  <p
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.p,
                                      projectcss.__wab_text,
                                      sty.p__zfUp2
                                    )}
                                  >
                                    {"Total Users"}
                                  </p>
                                </div>
                              }
                            />
                          </div>
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.column___1205T
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox___2RyeC
                            )}
                          >
                            <Satistic
                              className={classNames(
                                "__wab_instance",
                                sty.satistic__uWWzS
                              )}
                              unit={
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    sty.freeBox__tzEjk
                                  )}
                                >
                                  <p
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.p,
                                      projectcss.__wab_text,
                                      sty.p___3YsK
                                    )}
                                  >
                                    {"Users subscriptions"}
                                  </p>
                                </div>
                              }
                            />
                          </div>
                        </div>
                      </Stack__>
                    </Stack__>
                  </section>
                </React.Fragment>
              )}
            </DataCtxReader__>
          </PageLayout>
        </div>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  dashboard: ["dashboard", "pageLayout", "h1", "columns"],
  pageLayout: ["pageLayout", "h1", "columns"],
  h1: ["h1"],
  columns: ["columns"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicDashboardPage__ArgProps,
          internalVariantPropNames: PlasmicDashboardPage__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicDashboardPage__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "dashboard") {
    func.displayName = "PlasmicDashboardPage";
  } else {
    func.displayName = `PlasmicDashboardPage.${nodeName}`;
  }
  return func;
}

export const PlasmicDashboardPage = Object.assign(
  // Top-level PlasmicDashboardPage renders the root element
  makeNodeComponent("dashboard"),
  {
    // Helper components rendering sub-elements
    pageLayout: makeNodeComponent("pageLayout"),
    h1: makeNodeComponent("h1"),
    columns: makeNodeComponent("columns"),
    // Metadata about props expected for PlasmicDashboardPage
    internalVariantProps: PlasmicDashboardPage__VariantProps,
    internalArgProps: PlasmicDashboardPage__ArgProps,
    // Page metadata
    pageMetadata: {
      title: "Dashboard",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicDashboardPage;
/* prettier-ignore-end */
